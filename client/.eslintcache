[{"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/index.js":"1","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/App.js":"2","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/reportWebVitals.js":"3","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Login.js":"4","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Profile.js":"5","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Dashboard.js":"6","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/SignUp.js":"7","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/utils/privateRoute.js":"8","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/utils/axiosWithAuth.js":"9","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/utils/PrivateRoute.js":"10","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Board.js":"11","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/contexts/UserContext.js":"12","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/contexts/BoardContext.js":"13","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/yupSchemas.js":"14"},{"size":540,"mtime":1608774122006,"results":"15","hashOfConfig":"16"},{"size":3881,"mtime":1609190722598,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1608772902421,"results":"18","hashOfConfig":"16"},{"size":5518,"mtime":1609191393534,"results":"19","hashOfConfig":"16"},{"size":413,"mtime":1609101058146,"results":"20","hashOfConfig":"16"},{"size":1000,"mtime":1609101027530,"results":"21","hashOfConfig":"16"},{"size":7357,"mtime":1609191387248,"results":"22","hashOfConfig":"16"},{"size":450,"mtime":1608781574542,"results":"23","hashOfConfig":"16"},{"size":285,"mtime":1608773167069,"results":"24","hashOfConfig":"16"},{"size":450,"mtime":1608781574542,"results":"25","hashOfConfig":"16"},{"size":4760,"mtime":1609098745832,"results":"26","hashOfConfig":"16"},{"size":81,"mtime":1608930133323,"results":"27","hashOfConfig":"16"},{"size":84,"mtime":1608930151530,"results":"28","hashOfConfig":"16"},{"size":938,"mtime":1609191368703,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1cxeztd",{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/index.js",[],["60","61"],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/App.js",["62","63"],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/reportWebVitals.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Login.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Profile.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Dashboard.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/SignUp.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/utils/privateRoute.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/utils/axiosWithAuth.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/utils/PrivateRoute.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Board.js",["64"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\nimport { UserContext } from \"../contexts/UserContext\";\nimport { BoardContext } from \"../contexts/BoardContext\";\n\nimport { TextField, InputLabel, Button } from \"@material-ui/core\";\n\nfunction Board(props) {\n    const { userInfo } = useContext(UserContext)\n    const { fetchBoards, isUpdated, setIsUpdated } = useContext(BoardContext)\n    const [newBoard, setNewBoard] = useState({\n        title: \"\",\n        description: \"\",\n        thumbnail: \"\",\n    })\n\n    const handleChange = event => {\n        // event.persist();\n        setNewBoard({\n            ...newBoard, \n            [event.target.name]: event.target.value\n        })\n    }\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        axiosWithAuth()\n            .post(\"/boards/board\", {\n                boardid: userInfo.userid,\n                title: newBoard.title,\n                description: newBoard.description,\n                thumbnail: newBoard.thumbnail\n            })\n            .then((res) => {\n                setIsUpdated(true)\n                setNewBoard({        \n                    title: \"\",\n                    description: \"\",\n                    thumbnail: \"\",\n                });\n            })\n            .catch(err => console.log(err.message));\n    };\n\n    useEffect(() => {\n        fetchBoards();\n    }, [isUpdated])\n\n    return (\n        <div>\n            <div style={{ display:\"flex\", justifyContent:\"center\" }}>\n                <div className=\"board-form\" style={{ width:\"80%\", display:\"flex\", justifyContent:\"center\" }}>\n                    <form>\n                        <InputLabel \n                            style={{ \n                                display:\"flex\",        \n                                flexDirection:\"column\", \n                                alignItems:\"flex-start\"\n                            }}\n                        >\n                            Name: \n                            <TextField\n                                id=\"title\"\n                                type=\"text\"\n                                name=\"title\"\n                                value={newBoard.title}\n                                onChange={handleChange}\n                                variant=\"outlined\"\n                                size=\"small\"\n                                style={{ marginTop: 4 }}\n                            />\n                        </InputLabel>\n                        <InputLabel \n                            style={{ \n                                display:\"flex\", \n                                flexDirection:\"column\", \n                                alignItems:\"flex-start\",\n                                marginTop: 10 \n                            }}\n                        >\n                            Description:\n                            <TextField\n                                type=\"text\"\n                                name=\"description\"\n                                value={newBoard.description}\n                                onChange={handleChange}\n                                variant=\"outlined\"\n                                size=\"small\"\n                                style={{ marginTop: 4 }}\n                            />\n                        </InputLabel>\n                        <InputLabel \n                            style={{ \n                                display:\"flex\", \n                                flexDirection:\"column\", \n                                alignItems:\"flex-start\",\n                                marginTop: 10 \n                            }}\n                        >\n                            Thumbnail:\n                            <TextField\n                                type=\"text\"\n                                name=\"thumbnail\"\n                                value={newBoard.thumbnail}\n                                onChange={handleChange}\n                                variant=\"outlined\"\n                                size=\"small\"\n                                style={{ marginTop: 4 }}\n                            />\n                        </InputLabel>\n                        <Button \n                            id=\"addBoardBtn\" \n                            variant=\"contained\" \n                            size=\"small\" \n                            color=\"secondary\" \n                            style={{ marginTop: 20 }}\n                            onClick={handleSubmit}\n                        >\n                            Add Board\n                        </Button>\n                     </form>\n                </div>\n            </div>\n    </div>\n    );\n};\n\nexport default Board; ","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/contexts/UserContext.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/contexts/BoardContext.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/yupSchemas.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":50,"column":6,"nodeType":"71","endLine":50,"endColumn":16,"suggestions":"72"},{"ruleId":"69","severity":1,"message":"73","line":76,"column":6,"nodeType":"71","endLine":76,"endColumn":17,"suggestions":"74"},{"ruleId":"69","severity":1,"message":"73","line":47,"column":8,"nodeType":"71","endLine":47,"endColumn":19,"suggestions":"75"},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.","ArrayExpression",["78"],"React Hook useEffect has a missing dependency: 'fetchBoards'. Either include it or remove the dependency array.",["79"],["80"],"no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},{"desc":"83","fix":"85"},"Update the dependencies array to be: [history, loggedin, userInfo]",{"range":"86","text":"87"},"Update the dependencies array to be: [fetchBoards, isUpdated]",{"range":"88","text":"89"},{"range":"90","text":"89"},[1419,1429],"[history, loggedin, userInfo]",[2009,2020],"[fetchBoards, isUpdated]",[1431,1442]]