[{"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/index.js":"1","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/App.js":"2","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/reportWebVitals.js":"3","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Login.js":"4","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Profile.js":"5","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Dashboard.js":"6","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/SignUp.js":"7","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/utils/privateRoute.js":"8","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/utils/axiosWithAuth.js":"9","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/utils/PrivateRoute.js":"10","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/contexts/UserContext.js":"11","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/contexts/BoardContext.js":"12","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/yupSchemas.js":"13","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/theme.js":"14","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/AddBoard.js":"15","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Board.js":"16","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Articles.js":"17","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/UpdateBoard.js":"18"},{"size":540,"mtime":1608774122006,"results":"19","hashOfConfig":"20"},{"size":4689,"mtime":1609981788069,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1608772902421,"results":"22","hashOfConfig":"20"},{"size":5593,"mtime":1609981702978,"results":"23","hashOfConfig":"20"},{"size":474,"mtime":1609970917040,"results":"24","hashOfConfig":"20"},{"size":4399,"mtime":1609980987440,"results":"25","hashOfConfig":"20"},{"size":6561,"mtime":1609357565709,"results":"26","hashOfConfig":"20"},{"size":450,"mtime":1608781574542,"results":"27","hashOfConfig":"20"},{"size":285,"mtime":1608773167069,"results":"28","hashOfConfig":"20"},{"size":450,"mtime":1608781574542,"results":"29","hashOfConfig":"20"},{"size":81,"mtime":1608930133323,"results":"30","hashOfConfig":"20"},{"size":84,"mtime":1608930151530,"results":"31","hashOfConfig":"20"},{"size":938,"mtime":1609191368703,"results":"32","hashOfConfig":"20"},{"size":953,"mtime":1609979889882,"results":"33","hashOfConfig":"20"},{"size":3093,"mtime":1609964399772,"results":"34","hashOfConfig":"20"},{"size":2140,"mtime":1609978293949,"results":"35","hashOfConfig":"20"},{"size":6959,"mtime":1609981406090,"results":"36","hashOfConfig":"20"},{"size":3610,"mtime":1609970764851,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1cxeztd",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/index.js",[],["77","78"],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/App.js",["79"],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/reportWebVitals.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Login.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Profile.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Dashboard.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/SignUp.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/utils/privateRoute.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/utils/axiosWithAuth.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/utils/PrivateRoute.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/contexts/UserContext.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/contexts/BoardContext.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/yupSchemas.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/theme.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/AddBoard.js",["80"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\n\nimport { UserContext } from \"../contexts/UserContext\";\nimport { BoardContext } from \"../contexts/BoardContext\";\n\nimport { TextField, InputLabel, Button, CardHeader } from \"@material-ui/core\";\n\nfunction AddBoard(props) {\n    const { userInfo } = useContext(UserContext)\n    const { fetchBoards, isUpdated, setIsUpdated } = useContext(BoardContext)\n    const [newBoard, setNewBoard] = useState({\n        title: \"\",\n        thumbnail: \"\",\n    })\n\n    const handleChange = event => {\n        setNewBoard({\n            ...newBoard, \n            [event.target.name]: event.target.value\n        })\n    }\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        axiosWithAuth()\n            .post(\"/boards/board\", {\n                boardid: userInfo.userid,\n                title: newBoard.title,\n                thumbnail: newBoard.thumbnail\n            })\n            .then((res) => {\n                fetchBoards();\n                setIsUpdated(true);\n                setNewBoard({        \n                    title: \"\",\n                    thumbnail: \"\",\n                });\n                props.setOpen(false);\n            })\n            .catch(err => console.log(err.message));\n    };\n\n    useEffect(() => {\n        fetchBoards();\n    }, [isUpdated])\n\n    return (\n        <div className=\"form\">\n            <div className=\"form-container1\">\n                <form>\n                    <CardHeader title=\"Create Board\" />\n                    <InputLabel id=\"form-field\" style={{ marginTop:\"2px\" }}>\n                        Name: \n                        <TextField\n                            id=\"title\"\n                            type=\"text\"\n                            name=\"title\"\n                            value={newBoard.title}\n                            onChange={handleChange}\n                            variant=\"outlined\"\n                            size=\"small\"\n                            style={{ marginTop: 4 }}\n                        />\n                    </InputLabel>\n                    <InputLabel id=\"form-field\">\n                        Thumbnail:\n                        <TextField\n                            type=\"text\"\n                            name=\"thumbnail\"\n                            value={newBoard.thumbnail}\n                            onChange={handleChange}\n                            variant=\"outlined\"\n                            size=\"small\"\n                            style={{ marginTop: 4 }}\n                        />\n                    </InputLabel>\n                    <Button \n                        id=\"btn\"\n                        variant=\"contained\" \n                        size=\"small\" \n                        style={{ marginTop: 30 }}\n                        fullWidth\n                        onClick={handleSubmit}\n                    >\n                        Create\n                    </Button>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default AddBoard; ","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Board.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Articles.js",["81","82"],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/UpdateBoard.js",["83"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\n\nimport { BoardContext } from \"../contexts/BoardContext\";\n\nimport { TextField, InputLabel, Button, CardHeader } from \"@material-ui/core\";\n\nfunction UpdateBoard(props) {\n    const { setIsUpdated } = useContext(BoardContext);\n    const [editBoard, setEditBoard] = useState({\n        title: \"\",\n        thumbnail: \"\",\n    })\n\n    const handleEdit = () => {\n        // Base cases - if user leaves a field(s) blank, set field(s) to initial value\n        const oldTitle = props.edit.title\n        const oldThumbnail = props.edit.thumbnail\n        let newEdit = {}\n\n        if (editBoard.title === \"\" || editBoard.thumbnail === \"\") {\n            if (editBoard.title === \"\") {\n                newEdit = {...editBoard, title: oldTitle}\n                console.log({...editBoard, title: oldTitle})\n            } \n            else if (editBoard.thumbnail === \"\") {\n                newEdit = {...editBoard, thumbnail: oldThumbnail}\n            }\n            else {\n                newEdit = {title: oldTitle, thumbnail: oldThumbnail}\n            }\n        } else {\n            newEdit = editBoard\n        }\n\n        axiosWithAuth()\n            .put(`/boards/board/${props.edit.boardid}`, newEdit)\n            .then((res) => {\n                props.setFormOpen(false)\n                props.setEdit({})\n                setIsUpdated(true)\n                setEditBoard({\n                    title: \"\",\n                    thumbnail: \"\",\n                })\n            })\n            .catch(err => console.log(err))\n    };\n\n    const handleChange = event => {\n        setEditBoard({\n            ...editBoard, \n            [event.target.name]: event.target.value\n        })\n    }\n\n    return (\n        <div className=\"form\">\n            <div className=\"form-container1\">\n                <form>\n                    <CardHeader title=\"Update Board\" />\n                    <InputLabel id=\"form-field\" style={{ marginTop:\"2px\" }}>\n                        Name: \n                        <TextField\n                            id=\"title\"\n                            type=\"text\"\n                            name=\"title\"\n                            value={editBoard.title}\n                            onChange={handleChange}\n                            variant=\"outlined\"\n                            size=\"small\"\n                            style={{ marginTop: 4 }}\n                            placeholder={props.edit.title}\n                        />\n                    </InputLabel>\n                    <InputLabel id=\"form-field\">\n                        Thumbnail:\n                        <TextField\n                            type=\"text\"\n                            name=\"thumbnail\"\n                            value={editBoard.thumbnail}\n                            onChange={handleChange}\n                            variant=\"outlined\"\n                            size=\"small\"\n                            style={{ marginTop: 4 }}\n                            placeholder={props.edit.thumbnail}\n                        />\n                    </InputLabel>\n                    <Button \n                        id=\"btn\"\n                        variant=\"contained\" \n                        size=\"small\" \n                        style={{ marginTop: 30 }}\n                        fullWidth\n                        onClick={handleEdit}\n                    >\n                        Update\n                    </Button>\n                </form>\n            </div>\n        </div>\n    )\n};\n\nexport default UpdateBoard; ",{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":38,"column":6,"nodeType":"90","endLine":38,"endColumn":16,"suggestions":"91"},{"ruleId":"88","severity":1,"message":"92","line":46,"column":8,"nodeType":"90","endLine":46,"endColumn":19,"suggestions":"93"},{"ruleId":"94","severity":1,"message":"95","line":95,"column":19,"nodeType":"96","messageId":"97","endLine":95,"endColumn":27},{"ruleId":"94","severity":1,"message":"98","line":96,"column":12,"nodeType":"96","messageId":"97","endLine":96,"endColumn":24},{"ruleId":"94","severity":1,"message":"99","line":1,"column":27,"nodeType":"96","messageId":"97","endLine":1,"endColumn":36},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["102"],"React Hook useEffect has a missing dependency: 'fetchBoards'. Either include it or remove the dependency array.",["103"],"no-unused-vars","'setBoard' is assigned a value but never used.","Identifier","unusedVar","'openDropdown' is assigned a value but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},"Update the dependencies array to be: [history, loggedin]",{"range":"108","text":"109"},"Update the dependencies array to be: [fetchBoards, isUpdated]",{"range":"110","text":"111"},[1180,1190],"[history, loggedin]",[1376,1387],"[fetchBoards, isUpdated]"]