[{"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/index.js":"1","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/App.js":"2","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/reportWebVitals.js":"3","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Login.js":"4","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Profile.js":"5","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Dashboard.js":"6","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/SignUp.js":"7","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/utils/privateRoute.js":"8","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/utils/axiosWithAuth.js":"9","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/utils/PrivateRoute.js":"10","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/contexts/UserContext.js":"11","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/contexts/BoardContext.js":"12","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/yupSchemas.js":"13","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/theme.js":"14","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/AddBoard.js":"15","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Board.js":"16","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Articles.js":"17"},{"size":540,"mtime":1608774122006,"results":"18","hashOfConfig":"19"},{"size":4982,"mtime":1609291192234,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1608772902421,"results":"21","hashOfConfig":"19"},{"size":5200,"mtime":1609265898134,"results":"22","hashOfConfig":"19"},{"size":413,"mtime":1609101058146,"results":"23","hashOfConfig":"19"},{"size":2219,"mtime":1609266705063,"results":"24","hashOfConfig":"19"},{"size":6561,"mtime":1609265917655,"results":"25","hashOfConfig":"19"},{"size":450,"mtime":1608781574542,"results":"26","hashOfConfig":"19"},{"size":285,"mtime":1608773167069,"results":"27","hashOfConfig":"19"},{"size":450,"mtime":1608781574542,"results":"28","hashOfConfig":"19"},{"size":81,"mtime":1608930133323,"results":"29","hashOfConfig":"19"},{"size":84,"mtime":1608930151530,"results":"30","hashOfConfig":"19"},{"size":938,"mtime":1609191368703,"results":"31","hashOfConfig":"19"},{"size":953,"mtime":1609266230658,"results":"32","hashOfConfig":"19"},{"size":3725,"mtime":1609285778775,"results":"33","hashOfConfig":"19"},{"size":793,"mtime":1609204501753,"results":"34","hashOfConfig":"19"},{"size":7615,"mtime":1609290632950,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1cxeztd",{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"38"},"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/index.js",[],["74","75"],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/App.js",["76","77","78"],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/reportWebVitals.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Login.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Profile.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Dashboard.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/SignUp.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/utils/privateRoute.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/utils/axiosWithAuth.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/utils/PrivateRoute.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/contexts/UserContext.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/contexts/BoardContext.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/yupSchemas.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/theme.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/AddBoard.js",["79"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\n\nimport { UserContext } from \"../contexts/UserContext\";\nimport { BoardContext } from \"../contexts/BoardContext\";\n\nimport { TextField, InputLabel, Button, CardHeader } from \"@material-ui/core\";\n\nfunction AddBoard(props) {\n    const { userInfo } = useContext(UserContext)\n    const { fetchBoards, isUpdated, setIsUpdated } = useContext(BoardContext)\n    const [newBoard, setNewBoard] = useState({\n        title: \"\",\n        description: \"\",\n        thumbnail: \"\",\n    })\n\n    const handleChange = event => {\n        setNewBoard({\n            ...newBoard, \n            [event.target.name]: event.target.value\n        })\n    }\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        axiosWithAuth()\n            .post(\"/boards/board\", {\n                boardid: userInfo.userid,\n                title: newBoard.title,\n                description: newBoard.description,\n                thumbnail: newBoard.thumbnail\n            })\n            .then((res) => {\n                fetchBoards();\n                setIsUpdated(true);\n                setNewBoard({        \n                    title: \"\",\n                    description: \"\",\n                    thumbnail: \"\",\n                });\n                props.setOpen(false);\n            })\n            .catch(err => console.log(err.message));\n    };\n\n    useEffect(() => {\n        fetchBoards();\n    }, [isUpdated])\n\n    return (\n        <div className=\"form\">\n            <div className=\"form-container1\">\n                <form>\n                    <CardHeader title=\"Create Board\" />\n                    <InputLabel id=\"form-field\" style={{ marginTop:\"2px\" }}>\n                        Name: \n                        <TextField\n                            id=\"title\"\n                            type=\"text\"\n                            name=\"title\"\n                            value={newBoard.title}\n                            onChange={handleChange}\n                            variant=\"outlined\"\n                            size=\"small\"\n                            style={{ marginTop: 4 }}\n                        />\n                    </InputLabel>\n                    <InputLabel id=\"form-field\">\n                        Description:\n                        <TextField\n                            type=\"text\"\n                            name=\"description\"\n                            value={newBoard.description}\n                            onChange={handleChange}\n                            variant=\"outlined\"\n                            size=\"small\"\n                            style={{ marginTop: 4 }}\n                        />\n                    </InputLabel>\n                    <InputLabel id=\"form-field\">\n                        Thumbnail:\n                        <TextField\n                            type=\"text\"\n                            name=\"thumbnail\"\n                            value={newBoard.thumbnail}\n                            onChange={handleChange}\n                            variant=\"outlined\"\n                            size=\"small\"\n                            style={{ marginTop: 4 }}\n                        />\n                    </InputLabel>\n                    <Button \n                        id=\"btn\"\n                        variant=\"contained\" \n                        size=\"small\" \n                        style={{ marginTop: 30 }}\n                        fullWidth\n                        onClick={handleSubmit}\n                    >\n                        Create\n                    </Button>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default AddBoard; ","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Board.js",["80","81"],"import React, { useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { BoardContext } from \"../contexts/BoardContext\";\n\nfunction Board(props){\n    const { boards } = useContext(BoardContext);\n    let { boardid } = useParams();\n\n    const board = boards.filter(b => JSON.stringify(b.boardid) === boardid);\n\n    return (\n        <div>\n            {\n                board.map(board => (\n                    <h1>{board.title}</h1>\n                ))\n\n            }\n            {\n                !board.articles ? (\n                    <div />\n                ) : (\n                    board.articles.map(article => (\n                        <h1>{article.title}</h1>\n                    ))\n                )\n            }\n        </div>\n    );\n};\n\nexport default Board; ","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Articles.js",["82","83","84","85"],"import React, { useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport clsx from \"clsx\";\n\nimport { BoardContext } from \"../contexts/BoardContext\";\nimport { UserContext } from \"../contexts/UserContext\";\nimport { getModalStyle } from \"./theme\";\n\nimport { Typography, CardHeader, CardContent, Card, Modal, CardActionArea, Collapse, CardActions, IconButton, makeStyles, FormControl, Button, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport { ExpandMore, ExpandLess, Favorite } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      margin: \"0 4% 2%\",\n    },\n    container: {\n        width: \"100%\",\n        display: \"flex\",\n    },\n    left: {\n        width: \"55%\",\n        padding: \"2% 6% 2% 6%\",\n        textAlign: \"left\",\n    },\n    right: {\n        width: \"25%\",\n        padding: \"2% 6% 2% 0\",\n        height: 150,\n    },\n    expand: {\n        transform: \"rotate(0deg)\",\n        marginLeft: \"auto\",\n        transition: theme.transitions.create(\"transform\", {\n          duration: theme.transitions.duration.shortest,\n        }),\n      },\n    expandOpen: {\n        transform: \"rotate(180deg)\",\n    },\n    paper: {\n        position: \"absolute\",\n        width: 300,\n        paddingBottom: \"50px\",\n        borderRadius: \"6px\",\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n    button: {\n        display: \"block\",\n        marginTop: theme.spacing(2),\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n}));\n\nfunction Articles(props){\n    const { boards, articles, addArticles } = useContext(BoardContext);\n    const { userInfo } = useContext(UserContext);\n    const classes = useStyles();\n    const [selectedIndex, setSelectedIndex] = useState(\"\");\n\n    console.log(boards)\n    // modal\n    const [modalStyle] = useState(getModalStyle);\n    const [open, setOpen] = useState(false);\n    const [selectedArticle, setSelectedArticle] = useState({});\n\n    const handleExpandClick = (index) => {\n        if (selectedIndex === index) {\n            setSelectedIndex(\"\")\n          } else {\n            setSelectedIndex(index)\n          }\n    };\n\n    const handleOpen = (article) => {\n        setOpen(true);\n        setSelectedArticle(article);\n        console.log(selectedArticle)\n    };\n    \n    const handleClose = () => {\n        setOpen(false);\n        setSelectedArticle([]);\n    };\n\n    // dropdown\n    const [board, setBoard] = useState({});\n    const [openDropdown, setOpenDropdown] = useState(false);\n\n    const handleChange = (event) => {\n        setBoard(event.target.value);\n        console.log(event.target.value, selectedArticle)\n        addArticles(event.target.value.boardid, selectedArticle)\n        // resets\n        // setBoard({})\n        // setSelectedArticle([])\n        setOpen(false)\n        setOpenDropdown(false)\n    };\n\n    const handleDropdownOpen = () => {\n        setOpenDropdown(true);\n    };\n    \n    const handleDropdownClose = () => {\n        setOpenDropdown(false);\n    };\n\n    return (\n        <div>\n            <h1>Articles</h1>\n            <div className=\"list\">\n                {!articles ? (\n                    <div />\n                ) : (\n                    articles.map((article, index) => (\n                        <Card className={classes.root} key={article.title}>\n                            <CardActionArea \n                                key={article.title} \n                                href={article.url}\n                                target=\"_blank\"\n                            >\n                                <div className={classes.container}>\n                                    <CardHeader\n                                        className={classes.left}\n                                        title={article.title}\n                                        subheader={article.author}\n                                    />\n                                    <img className={classes.right} src={article.urlToImage} alt={article.title}/>\n                                </div>\n                            </CardActionArea>\n                            <CardActions style={{ paddingLeft:\"2%\", background:\"rgb(216, 216, 216, .5)\" }}>\n                                <IconButton onClick={() => handleOpen(article)}>\n                                    <Favorite />\n                                </IconButton>\n                                <Modal\n                                    open={open}\n                                    onClose={handleClose}\n                                >\n                                    <div style={modalStyle} className={classes.paper} setOpen={setOpen}>\n                                        <Card>\n                                            <Button className={classes.button} onClick={handleDropdownOpen}>\n                                                Open the select\n                                            </Button>\n                                            <FormControl className={classes.formControl}>\n                                                <InputLabel>Board</InputLabel>\n                                                <Select\n                                                    labelId=\"demo-controlled-open-select-label\"\n                                                    id=\"demo-controlled-open-select\"\n                                                    open={open}\n                                                    onClose={handleDropdownClose}\n                                                    onOpen={handleDropdownOpen}\n                                                    value={board}\n                                                    onChange={handleChange}\n                                                >\n                                                    <MenuItem value=\"\">\n                                                        <em>None</em>\n                                                    </MenuItem>\n                                                    {\n                                                        boards.map((board, i) => (\n                                                            <MenuItem key={board.boardid} value={board} onChange={handleChange}>{board.title}</MenuItem>\n                                                        ))\n                                                    }\n                                                </Select>\n                                            </FormControl>\n                                        </Card>\n                                    </div>\n                                </Modal>\n\n                                <IconButton onClick={() => handleExpandClick(index)}>\n                                    {index === selectedIndex ? <ExpandLess /> : <ExpandMore />}\n                                </IconButton>\n                            </CardActions>\n                            <Collapse in={index === selectedIndex} timeout=\"auto\" unmountOnExit>\n                                <CardContent style={{ textAlign:\"left\", padding:\"2% 6%\", background:\"rgb(216, 216, 216, .1)\" }}>\n                                    <Typography paragraph>Description:</Typography>\n                                    <Typography paragraph>{article.description}</Typography>\n                                </CardContent>\n                            </Collapse>\n                        </Card>\n                    ))\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Articles; ",{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":41,"column":6,"nodeType":"92","endLine":41,"endColumn":16,"suggestions":"93"},{"ruleId":"90","severity":1,"message":"94","line":67,"column":6,"nodeType":"92","endLine":67,"endColumn":17,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":83,"column":25,"nodeType":"98","messageId":"99","endLine":83,"endColumn":41},{"ruleId":"90","severity":1,"message":"94","line":49,"column":8,"nodeType":"92","endLine":49,"endColumn":19,"suggestions":"100"},{"ruleId":"96","severity":1,"message":"101","line":8,"column":53,"nodeType":"98","messageId":"99","endLine":8,"endColumn":57},{"ruleId":"90","severity":1,"message":"94","line":50,"column":8,"nodeType":"92","endLine":50,"endColumn":19,"suggestions":"102"},{"ruleId":"96","severity":1,"message":"103","line":2,"column":10,"nodeType":"98","messageId":"99","endLine":2,"endColumn":14},{"ruleId":"96","severity":1,"message":"104","line":3,"column":8,"nodeType":"98","messageId":"99","endLine":3,"endColumn":12},{"ruleId":"96","severity":1,"message":"105","line":61,"column":13,"nodeType":"98","messageId":"99","endLine":61,"endColumn":21},{"ruleId":"96","severity":1,"message":"106","line":92,"column":12,"nodeType":"98","messageId":"99","endLine":92,"endColumn":24},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.","ArrayExpression",["109"],"React Hook useEffect has a missing dependency: 'fetchBoards'. Either include it or remove the dependency array.",["110"],"no-unused-vars","'setSavedArticles' is assigned a value but never used.","Identifier","unusedVar",["111"],"'Card' is defined but never used.",["112"],"'Link' is defined but never used.","'clsx' is defined but never used.","'userInfo' is assigned a value but never used.","'openDropdown' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},{"desc":"115","fix":"117"},{"desc":"115","fix":"118"},"Update the dependencies array to be: [history, loggedin, userInfo]",{"range":"119","text":"120"},"Update the dependencies array to be: [fetchBoards, isUpdated]",{"range":"121","text":"122"},{"range":"123","text":"122"},{"range":"124","text":"122"},[1287,1297],"[history, loggedin, userInfo]",[1877,1888],"[fetchBoards, isUpdated]",[1489,1500],[1530,1541]]