[{"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/index.js":"1","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/App.js":"2","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/reportWebVitals.js":"3","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Login.js":"4","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Profile.js":"5","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Dashboard.js":"6","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/SignUp.js":"7","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/utils/privateRoute.js":"8","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/utils/axiosWithAuth.js":"9","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/utils/PrivateRoute.js":"10","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/contexts/UserContext.js":"11","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/contexts/BoardContext.js":"12","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/yupSchemas.js":"13","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/theme.js":"14","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/AddBoard.js":"15","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Board.js":"16","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Articles.js":"17","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/UpdateBoard.js":"18"},{"size":540,"mtime":1610042351496,"results":"19","hashOfConfig":"20"},{"size":4689,"mtime":1609981788069,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1608772902421,"results":"22","hashOfConfig":"20"},{"size":5593,"mtime":1609981702978,"results":"23","hashOfConfig":"20"},{"size":474,"mtime":1609970917040,"results":"24","hashOfConfig":"20"},{"size":4399,"mtime":1609980987440,"results":"25","hashOfConfig":"20"},{"size":6561,"mtime":1609357565709,"results":"26","hashOfConfig":"20"},{"size":450,"mtime":1608781574542,"results":"27","hashOfConfig":"28"},{"size":285,"mtime":1608773167069,"results":"29","hashOfConfig":"20"},{"size":450,"mtime":1608781574542,"results":"30","hashOfConfig":"20"},{"size":81,"mtime":1608930133323,"results":"31","hashOfConfig":"20"},{"size":84,"mtime":1608930151530,"results":"32","hashOfConfig":"20"},{"size":938,"mtime":1609191368703,"results":"33","hashOfConfig":"20"},{"size":953,"mtime":1609979889882,"results":"34","hashOfConfig":"20"},{"size":3093,"mtime":1609964399772,"results":"35","hashOfConfig":"20"},{"size":2140,"mtime":1609978293949,"results":"36","hashOfConfig":"20"},{"size":6959,"mtime":1609981406090,"results":"37","hashOfConfig":"20"},{"size":3610,"mtime":1609970764851,"results":"38","hashOfConfig":"20"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"1no9ruv",{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cxeztd",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"41"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"41"},"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/index.js",[],["80","81"],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/App.js",["82"],"import React, { useState, useEffect } from \"react\";\nimport { Route, Switch, Link, useHistory } from \"react-router-dom\";\nimport { PrivateRoute } from \"./utils/PrivateRoute\";\nimport { axiosWithAuth } from \"./utils/axiosWithAuth\";\nimport { UserContext } from \"./contexts/UserContext\";\nimport { BoardContext } from \"./contexts/BoardContext\";\n\nimport Login from \"./components/Login\";\nimport SignUp from \"./components/SignUp\";\nimport Dashboard from \"./components/Dashboard\";\nimport Profile from \"./components/Profile\";\nimport Board from \"./components/Board\";\nimport Articles from \"./components/Articles\";\nimport articles from \"./assets/data.json\"\n\nimport logo from \"./assets/logo.png\";\nimport { Button } from \"@material-ui/core\";\nimport \"./App.css\";\n\nfunction App() {\n  const [loggedin, setLoggedin] = useState(false);\n  const [userInfo, setUserInfo] = useState([]);\n  const history = useHistory();\n\n  // user info\n  useEffect(() => {\n    if (loggedin) {\n      axiosWithAuth()\n        .get(\"/users/myinfo\")\n        .then(res => {\n          setUserInfo(res.data);\n          history.push(\"/dashboard\")\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    }\n  }, [loggedin]);\n\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    setLoggedin(false);\n  };\n\n  // boards\n  const [boards, setBoards] = useState([]);\n  const [isUpdated, setIsUpdated] = useState(false)\n\n  const fetchBoards = () => {\n    axiosWithAuth()\n        .get(\"/boards/boards\")\n        .then((res) => {\n          setBoards(res.data)\n          setIsUpdated(false)\n        })\n        .catch((err) => console.log(err.response));\n  };\n\n  useEffect(() => {\n      fetchBoards();\n  }, [isUpdated]);\n\n  const addArticles = (board, article) => {\n    axiosWithAuth()\n      .post(\"/articles/article\", {\n        title: JSON.stringify(article.title),\n        description: JSON.stringify(article.description),\n        url: JSON.stringify(article.url),\n        author: JSON.stringify(article.author),\n        urlToImage: JSON.stringify(article.urlToImage),\n        boards: [{...board, board: { boardid: board.boardid }}],\n    })\n      .then((res) => {\n        fetchBoards();\n        setIsUpdated(true);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <UserContext.Provider value={{ userInfo, setLoggedin }}>\n      <BoardContext.Provider value = {{ boards, setBoards, fetchBoards, isUpdated, setIsUpdated, articles, addArticles }}>\n        <div className=\"gradient\">\n          <div className=\"gradient-2\" />\n          <div className=\"gradient-3\" />\n        </div>\n        <div className=\"App\">\n          <nav className=\"App-header\">\n            <div className=\"navbar-left\">\n              <img src={logo} alt=\"logo\" className=\"logo\" />\n              <h1 style={{ marginLeft:\"15px\" }}>Pintreach</h1>\n            </div>\n            {loggedin ? (\n              <div className=\"navbar-right\">\n                <Button id=\"btn3\">\n                  <Link to=\"/dashboard\" className=\"nav-link\">\n                    Dashboard\n                  </Link>\n                </Button>\n                 <Button id=\"btn3\">\n                  <Link to=\"/articles\" className=\"nav-link\">\n                    Articles\n                  </Link>\n                </Button>\n                {/* <Button id=\"btn3\">\n                  <Link to=\"/profile\" className=\"nav-link\">\n                    Profile\n                  </Link>\n                </Button> */}\n                <Button id=\"btn3\" onClick={logout}>\n                  <Link className=\"nav-link\">\n                    Logout\n                  </Link>\n                </Button>\n              </div>\n            ) : (\n              <div className=\"navbar-right\">\n                <Button id=\"btn3\">\n                  <Link to=\"/login\" className=\"nav-link\">\n                    Login\n                  </Link>\n                </Button>\n                <Button id=\"btn3\">\n                  <Link to=\"/signup\" className=\"nav-link\">\n                    Sign Up\n                  </Link>\n                </Button>\n              </div>\n            )}\n          </nav>\n\n          <Switch>\n            <Route exact path=\"/login\" render={props => <Login setLoggedin={setLoggedin} />}  />\n            <Route exact path=\"/signup\" component={SignUp} />\n            <PrivateRoute exact path=\"/dashboard\" component={Dashboard}/>\n            <PrivateRoute exact path=\"/profile\" component={Profile} />\n            <PrivateRoute exact path=\"/board/:boardid\" component={Board} />\n            <PrivateRoute exact path=\"/articles\" component={Articles} />\n          </Switch>\n        </div>\n      </BoardContext.Provider>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/reportWebVitals.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Login.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Profile.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Dashboard.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/SignUp.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/utils/privateRoute.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/utils/axiosWithAuth.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/utils/PrivateRoute.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/contexts/UserContext.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/contexts/BoardContext.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/yupSchemas.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/theme.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/AddBoard.js",["83"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\n\nimport { UserContext } from \"../contexts/UserContext\";\nimport { BoardContext } from \"../contexts/BoardContext\";\n\nimport { TextField, InputLabel, Button, CardHeader } from \"@material-ui/core\";\n\nfunction AddBoard(props) {\n    const { userInfo } = useContext(UserContext)\n    const { fetchBoards, isUpdated, setIsUpdated } = useContext(BoardContext)\n    const [newBoard, setNewBoard] = useState({\n        title: \"\",\n        thumbnail: \"\",\n    })\n\n    const handleChange = event => {\n        setNewBoard({\n            ...newBoard, \n            [event.target.name]: event.target.value\n        })\n    }\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        axiosWithAuth()\n            .post(\"/boards/board\", {\n                boardid: userInfo.userid,\n                title: newBoard.title,\n                thumbnail: newBoard.thumbnail\n            })\n            .then((res) => {\n                fetchBoards();\n                setIsUpdated(true);\n                setNewBoard({        \n                    title: \"\",\n                    thumbnail: \"\",\n                });\n                props.setOpen(false);\n            })\n            .catch(err => console.log(err.message));\n    };\n\n    useEffect(() => {\n        fetchBoards();\n    }, [isUpdated])\n\n    return (\n        <div className=\"form\">\n            <div className=\"form-container1\">\n                <form>\n                    <CardHeader title=\"Create Board\" />\n                    <InputLabel id=\"form-field\" style={{ marginTop:\"2px\" }}>\n                        Name: \n                        <TextField\n                            id=\"title\"\n                            type=\"text\"\n                            name=\"title\"\n                            value={newBoard.title}\n                            onChange={handleChange}\n                            variant=\"outlined\"\n                            size=\"small\"\n                            style={{ marginTop: 4 }}\n                        />\n                    </InputLabel>\n                    <InputLabel id=\"form-field\">\n                        Thumbnail:\n                        <TextField\n                            type=\"text\"\n                            name=\"thumbnail\"\n                            value={newBoard.thumbnail}\n                            onChange={handleChange}\n                            variant=\"outlined\"\n                            size=\"small\"\n                            style={{ marginTop: 4 }}\n                        />\n                    </InputLabel>\n                    <Button \n                        id=\"btn\"\n                        variant=\"contained\" \n                        size=\"small\" \n                        style={{ marginTop: 30 }}\n                        fullWidth\n                        onClick={handleSubmit}\n                    >\n                        Create\n                    </Button>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default AddBoard; ","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Board.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Articles.js",["84","85"],"import React, { useState, useContext } from \"react\";\n\nimport { BoardContext } from \"../contexts/BoardContext\";\nimport { getModalStyle } from \"./theme\";\n\nimport { Typography, CardHeader, CardContent, Card, Modal, CardActionArea, Collapse, CardActions, IconButton, makeStyles, FormControl, Button, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport { ExpandMore, ExpandLess, Favorite } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: \"2%\",\n        [theme.breakpoints.down(\"sm\")]: {\n            margin: \"4%\"\n        }\n    },\n    container: {\n        width: \"100%\",\n        display: \"flex\",\n    },\n    left: {\n        width: \"55%\",\n        padding: \"2% 6% 2% 6%\",\n        textAlign: \"left\",\n        [theme.breakpoints.down(\"sm\")]: {\n            width: \"100%\",\n        }\n    },\n    right: {\n        width: \"25%\",\n        padding: \"2% 6% 2% 0\",\n        height: 150,\n        [theme.breakpoints.down(\"sm\")]: {\n            width: \"0\"\n        }\n    },\n    expand: {\n        transform: \"rotate(0deg)\",\n        marginLeft: \"auto\",\n        transition: theme.transitions.create(\"transform\", {\n          duration: theme.transitions.duration.shortest,\n        }),\n      },\n    expandOpen: {\n        transform: \"rotate(180deg)\",\n    },\n    paper: {\n        position: \"absolute\",\n        width: 300,\n        paddingBottom: \"50px\",\n        borderRadius: \"6px\",\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n    button: {\n        display: \"block\",\n        marginTop: theme.spacing(2),\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 150,\n    },\n}));\n\nfunction Articles(props){\n    const { boards, articles, addArticles } = useContext(BoardContext);\n    const classes = useStyles();\n    const [selectedIndex, setSelectedIndex] = useState(\"\");\n\n    // modal\n    const [modalStyle] = useState(getModalStyle);\n    const [open, setOpen] = useState(false);\n    const [selectedArticle, setSelectedArticle] = useState({});\n\n    const handleExpandClick = (index) => {\n        if (selectedIndex === index) {\n            setSelectedIndex(\"\")\n          } else {\n            setSelectedIndex(index)\n          }\n    };\n\n    const handleOpen = (article) => {\n        setOpen(true);\n        setSelectedArticle(article);\n\n    };\n    \n    const handleClose = () => {\n        setOpen(false);\n        setSelectedArticle([]);\n    };\n\n    // dropdown\n    const [board, setBoard] = useState(\"\");\n    const [openDropdown, setOpenDropdown] = useState(false);\n\n    const handleChange = (event) => {\n        event.preventDefault();\n        addArticles(event.target.value, selectedArticle)\n        setOpen(false)\n        setOpenDropdown(false)\n    };\n\n    const handleDropdownOpen = () => {\n        setOpenDropdown(true);\n    };\n    \n    const handleDropdownClose = () => {\n        setOpenDropdown(false);\n    };\n\n    return (\n        <div>\n            <div className=\"list\">\n                {!articles ? (\n                    <div />\n                ) : (\n                    articles.map((article, index) => (\n                        <Card className={classes.root} key={article.title}>\n                            <CardActionArea \n                                key={article.title} \n                                href={article.url}\n                                target=\"_blank\"\n                            >\n                                <div className={classes.container}>\n                                    <CardHeader\n                                        className={classes.left}\n                                        title={article.title}\n                                        subheader={article.author}\n                                    />\n                                    <img className={classes.right} src={article.urlToImage} alt={article.title}/>\n                                </div>\n                            </CardActionArea>\n                            <CardActions>\n                                <IconButton onClick={() => handleOpen(article)}>\n                                    <Favorite />\n                                </IconButton>\n                                <Modal\n                                    open={open}\n                                    onClose={handleClose}\n                                >\n                                    <div style={modalStyle} className={classes.paper}>\n                                        <Card>\n                                            <Button className={classes.button} onClick={handleDropdownOpen}>\n                                                Select a board:\n                                            </Button>\n                                            <FormControl className={classes.formControl}>\n                                                <InputLabel>Board</InputLabel>\n                                                <Select\n                                                    open={open}\n                                                    onClose={handleDropdownClose}\n                                                    onOpen={handleDropdownOpen}\n                                                    value={board}\n                                                    onChange={handleChange}\n                                                >\n                                                    {\n                                                        boards.map(board => (\n                                                            <MenuItem key={board.boardid} value={board} onChange={handleChange}>{board.title}</MenuItem>\n                                                        ))\n                                                    }\n                                                </Select>\n                                            </FormControl>\n                                        </Card>\n                                    </div>\n                                </Modal>\n\n                                <IconButton onClick={() => handleExpandClick(index)}>\n                                    {index === selectedIndex ? <ExpandLess /> : <ExpandMore />}\n                                </IconButton>\n                            </CardActions>\n                            <Collapse in={index === selectedIndex} timeout=\"auto\" unmountOnExit>\n                                <CardContent style={{ textAlign:\"left\", padding:\"2% 6%\", background:\"rgb(216, 216, 216, .1)\" }}>\n                                    <Typography paragraph>Description:</Typography>\n                                    <Typography paragraph>{article.description}</Typography>\n                                </CardContent>\n                            </Collapse>\n                        </Card>\n                    ))\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Articles; ","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/UpdateBoard.js",["86"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\n\nimport { BoardContext } from \"../contexts/BoardContext\";\n\nimport { TextField, InputLabel, Button, CardHeader } from \"@material-ui/core\";\n\nfunction UpdateBoard(props) {\n    const { setIsUpdated } = useContext(BoardContext);\n    const [editBoard, setEditBoard] = useState({\n        title: \"\",\n        thumbnail: \"\",\n    })\n\n    const handleEdit = () => {\n        // Base cases - if user leaves a field(s) blank, set field(s) to initial value\n        const oldTitle = props.edit.title\n        const oldThumbnail = props.edit.thumbnail\n        let newEdit = {}\n\n        if (editBoard.title === \"\" || editBoard.thumbnail === \"\") {\n            if (editBoard.title === \"\") {\n                newEdit = {...editBoard, title: oldTitle}\n                console.log({...editBoard, title: oldTitle})\n            } \n            else if (editBoard.thumbnail === \"\") {\n                newEdit = {...editBoard, thumbnail: oldThumbnail}\n            }\n            else {\n                newEdit = {title: oldTitle, thumbnail: oldThumbnail}\n            }\n        } else {\n            newEdit = editBoard\n        }\n\n        axiosWithAuth()\n            .put(`/boards/board/${props.edit.boardid}`, newEdit)\n            .then((res) => {\n                props.setFormOpen(false)\n                props.setEdit({})\n                setIsUpdated(true)\n                setEditBoard({\n                    title: \"\",\n                    thumbnail: \"\",\n                })\n            })\n            .catch(err => console.log(err))\n    };\n\n    const handleChange = event => {\n        setEditBoard({\n            ...editBoard, \n            [event.target.name]: event.target.value\n        })\n    }\n\n    return (\n        <div className=\"form\">\n            <div className=\"form-container1\">\n                <form>\n                    <CardHeader title=\"Update Board\" />\n                    <InputLabel id=\"form-field\" style={{ marginTop:\"2px\" }}>\n                        Name: \n                        <TextField\n                            id=\"title\"\n                            type=\"text\"\n                            name=\"title\"\n                            value={editBoard.title}\n                            onChange={handleChange}\n                            variant=\"outlined\"\n                            size=\"small\"\n                            style={{ marginTop: 4 }}\n                            placeholder={props.edit.title}\n                        />\n                    </InputLabel>\n                    <InputLabel id=\"form-field\">\n                        Thumbnail:\n                        <TextField\n                            type=\"text\"\n                            name=\"thumbnail\"\n                            value={editBoard.thumbnail}\n                            onChange={handleChange}\n                            variant=\"outlined\"\n                            size=\"small\"\n                            style={{ marginTop: 4 }}\n                            placeholder={props.edit.thumbnail}\n                        />\n                    </InputLabel>\n                    <Button \n                        id=\"btn\"\n                        variant=\"contained\" \n                        size=\"small\" \n                        style={{ marginTop: 30 }}\n                        fullWidth\n                        onClick={handleEdit}\n                    >\n                        Update\n                    </Button>\n                </form>\n            </div>\n        </div>\n    )\n};\n\nexport default UpdateBoard; ",{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":38,"column":6,"nodeType":"93","endLine":38,"endColumn":16,"suggestions":"94"},{"ruleId":"91","severity":1,"message":"95","line":46,"column":8,"nodeType":"93","endLine":46,"endColumn":19,"suggestions":"96"},{"ruleId":"97","severity":1,"message":"98","line":95,"column":19,"nodeType":"99","messageId":"100","endLine":95,"endColumn":27},{"ruleId":"97","severity":1,"message":"101","line":96,"column":12,"nodeType":"99","messageId":"100","endLine":96,"endColumn":24},{"ruleId":"97","severity":1,"message":"102","line":1,"column":27,"nodeType":"99","messageId":"100","endLine":1,"endColumn":36},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["105"],"React Hook useEffect has a missing dependency: 'fetchBoards'. Either include it or remove the dependency array.",["106"],"no-unused-vars","'setBoard' is assigned a value but never used.","Identifier","unusedVar","'openDropdown' is assigned a value but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},"Update the dependencies array to be: [history, loggedin]",{"range":"111","text":"112"},"Update the dependencies array to be: [fetchBoards, isUpdated]",{"range":"113","text":"114"},[1180,1190],"[history, loggedin]",[1376,1387],"[fetchBoards, isUpdated]"]