[{"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/index.js":"1","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/App.js":"2","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/reportWebVitals.js":"3","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Login.js":"4","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Profile.js":"5","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Dashboard.js":"6","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/SignUp.js":"7","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/utils/privateRoute.js":"8","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/utils/axiosWithAuth.js":"9","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/utils/PrivateRoute.js":"10","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/contexts/UserContext.js":"11","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/contexts/BoardContext.js":"12","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/yupSchemas.js":"13","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/theme.js":"14","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/AddBoard.js":"15","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Board.js":"16","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Articles.js":"17"},{"size":540,"mtime":1608774122006,"results":"18","hashOfConfig":"19"},{"size":4982,"mtime":1609291192234,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1608772902421,"results":"21","hashOfConfig":"19"},{"size":5479,"mtime":1609357515882,"results":"22","hashOfConfig":"19"},{"size":413,"mtime":1609101058146,"results":"23","hashOfConfig":"19"},{"size":2219,"mtime":1609266705063,"results":"24","hashOfConfig":"19"},{"size":6561,"mtime":1609357565709,"results":"25","hashOfConfig":"19"},{"size":450,"mtime":1608781574542,"results":"26","hashOfConfig":"19"},{"size":285,"mtime":1608773167069,"results":"27","hashOfConfig":"19"},{"size":450,"mtime":1608781574542,"results":"28","hashOfConfig":"19"},{"size":81,"mtime":1608930133323,"results":"29","hashOfConfig":"19"},{"size":84,"mtime":1608930151530,"results":"30","hashOfConfig":"19"},{"size":938,"mtime":1609191368703,"results":"31","hashOfConfig":"19"},{"size":953,"mtime":1609266230658,"results":"32","hashOfConfig":"19"},{"size":3725,"mtime":1609285778775,"results":"33","hashOfConfig":"19"},{"size":793,"mtime":1609204501753,"results":"34","hashOfConfig":"19"},{"size":7615,"mtime":1609290632950,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1cxeztd",{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/index.js",[],["75","76"],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/App.js",["77","78","79"],"import React, { useState, useEffect } from \"react\";\nimport { Route, Switch, Link, useHistory } from \"react-router-dom\";\nimport { PrivateRoute } from \"./utils/PrivateRoute\";\nimport { axiosWithAuth } from \"./utils/axiosWithAuth\";\nimport { UserContext } from \"./contexts/UserContext\";\nimport { BoardContext } from \"./contexts/BoardContext\";\n// import axios from \"axios\";\n\nimport Login from \"./components/Login\";\nimport SignUp from \"./components/SignUp\";\nimport Dashboard from \"./components/Dashboard\";\nimport Profile from \"./components/Profile\";\nimport Board from \"./components/Board\";\nimport Articles from \"./components/Articles\";\nimport articles from \"./assets/data.json\"\n\nimport logo from \"./assets/logo.png\";\nimport { Button } from \"@material-ui/core\";\nimport \"./App.css\";\n\nfunction App() {\n  const [loggedin, setLoggedin] = useState(false);\n  const [userInfo, setUserInfo] = useState([]);\n  const history = useHistory();\n\n  console.log(articles)\n  // user info\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) {\n      axiosWithAuth()\n        .get(\"/users/myinfo\")\n        .then(res => {\n          setUserInfo(res.data);\n          console.log(userInfo)\n          history.push(\"/dashboard\")\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    }\n  }, [loggedin]);\n\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    setLoggedin(false);\n  };\n\n  // boards\n  const [boards, setBoards] = useState([]);\n  const [isUpdated, setIsUpdated] = useState(false)\n\n  const fetchBoards = () => {\n    if (localStorage.getItem(\"token\")) {\n      axiosWithAuth()\n          .get(\"/boards/boards\")\n          .then((res) => {\n            setBoards(res.data)\n            console.log(boards)\n            setIsUpdated(false)\n          })\n          .catch((err) => console.log(err.response));\n    }\n  };\n\n  useEffect(() => {\n      fetchBoards();\n  }, [isUpdated]);\n\n  // articles\n  // const [articles, setArticles] = useState([]);\n\n  // const getArticles = () => {\n  //   axios\n  //     .get(\"https://newsapi.org/v2/top-headlines?country=us&apiKey=0aff37691fc248aea950f3992e4004a0\")\n  //     .then(res => setArticles(res.data))\n  //     .catch(err => console.log(err));\n  // };\n\n  // useEffect(() => {\n  //   getArticles();\n  // }, [articles]);\n\n  const [savedArticles, setSavedArticles] = useState([]);\n\n  const addArticles = (boardid, article) => {\n    if (localStorage.getItem(\"token\")) {\n    axiosWithAuth()\n      .put(`/boards/board/${boardid}`, {boardid, articles: [{...articles, article}], users: {userInfo}})\n      .then((res) => {\n        fetchBoards();\n        setIsUpdated(true);\n      })\n      .catch((err) => console.log(err));\n    }\n  };\n\n  return (\n    <UserContext.Provider value={{ userInfo }}>\n      <BoardContext.Provider value = {{ boards, fetchBoards, isUpdated, setIsUpdated, articles, savedArticles, addArticles}}>\n        <div className=\"App\">\n          <nav>\n            <div className=\"navbar-left\">\n              <img src={logo} alt=\"logo\" width=\"50px\" height=\"50px\" />\n              <h1 style={{ marginLeft:\"8px\" }}>Pintreach</h1>\n            </div>\n            {localStorage.getItem(\"token\") ? (\n              <div className=\"navbar-right\">\n                 <Button id=\"btn3\">\n                  <Link to=\"/articles\" className=\"nav-link\">\n                    Articles\n                  </Link>\n                </Button>\n                <Button id=\"btn3\">\n                  <Link to=\"/dashboard\" className=\"nav-link\">\n                    Dashboard\n                  </Link>\n                </Button>\n                <Button id=\"btn3\">\n                  <Link to=\"/profile\" className=\"nav-link\">\n                    Profile\n                  </Link>\n                </Button>\n                <Button id=\"btn3\" onClick={logout}>\n                  <Link className=\"nav-link\">\n                    Logout\n                  </Link>\n                </Button>\n              </div>\n            ) : (\n              <div className=\"navbar-right\">\n                <Button id=\"btn3\">\n                  <Link to=\"/login\" className=\"nav-link\">\n                    Login\n                  </Link>\n                </Button>\n                <Button id=\"btn2\">\n                  <Link to=\"/signup\" className=\"nav-link\">\n                    Sign Up\n                  </Link>\n                </Button>\n              </div>\n            )}\n          </nav>\n\n          <Switch>\n            <Route exact path=\"/login\" render={props => <Login setLoggedin={setLoggedin} />}  />\n            <Route exact path=\"/signup\" component={SignUp} />\n            <PrivateRoute exact path=\"/dashboard\" component={Dashboard}/>\n            <PrivateRoute exact path=\"/profile\" component={Profile} />\n            <PrivateRoute exact path=\"/board/:boardid\" component={Board} />\n            <PrivateRoute exact path=\"/articles\" component={Articles} />\n          </Switch>\n        </div>\n      </BoardContext.Provider>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/reportWebVitals.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Login.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Profile.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Dashboard.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/SignUp.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/utils/privateRoute.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/utils/axiosWithAuth.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/utils/PrivateRoute.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/contexts/UserContext.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/contexts/BoardContext.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/yupSchemas.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/theme.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/AddBoard.js",["80"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\n\nimport { UserContext } from \"../contexts/UserContext\";\nimport { BoardContext } from \"../contexts/BoardContext\";\n\nimport { TextField, InputLabel, Button, CardHeader } from \"@material-ui/core\";\n\nfunction AddBoard(props) {\n    const { userInfo } = useContext(UserContext)\n    const { fetchBoards, isUpdated, setIsUpdated } = useContext(BoardContext)\n    const [newBoard, setNewBoard] = useState({\n        title: \"\",\n        description: \"\",\n        thumbnail: \"\",\n    })\n\n    const handleChange = event => {\n        setNewBoard({\n            ...newBoard, \n            [event.target.name]: event.target.value\n        })\n    }\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        axiosWithAuth()\n            .post(\"/boards/board\", {\n                boardid: userInfo.userid,\n                title: newBoard.title,\n                description: newBoard.description,\n                thumbnail: newBoard.thumbnail\n            })\n            .then((res) => {\n                fetchBoards();\n                setIsUpdated(true);\n                setNewBoard({        \n                    title: \"\",\n                    description: \"\",\n                    thumbnail: \"\",\n                });\n                props.setOpen(false);\n            })\n            .catch(err => console.log(err.message));\n    };\n\n    useEffect(() => {\n        fetchBoards();\n    }, [isUpdated])\n\n    return (\n        <div className=\"form\">\n            <div className=\"form-container1\">\n                <form>\n                    <CardHeader title=\"Create Board\" />\n                    <InputLabel id=\"form-field\" style={{ marginTop:\"2px\" }}>\n                        Name: \n                        <TextField\n                            id=\"title\"\n                            type=\"text\"\n                            name=\"title\"\n                            value={newBoard.title}\n                            onChange={handleChange}\n                            variant=\"outlined\"\n                            size=\"small\"\n                            style={{ marginTop: 4 }}\n                        />\n                    </InputLabel>\n                    <InputLabel id=\"form-field\">\n                        Description:\n                        <TextField\n                            type=\"text\"\n                            name=\"description\"\n                            value={newBoard.description}\n                            onChange={handleChange}\n                            variant=\"outlined\"\n                            size=\"small\"\n                            style={{ marginTop: 4 }}\n                        />\n                    </InputLabel>\n                    <InputLabel id=\"form-field\">\n                        Thumbnail:\n                        <TextField\n                            type=\"text\"\n                            name=\"thumbnail\"\n                            value={newBoard.thumbnail}\n                            onChange={handleChange}\n                            variant=\"outlined\"\n                            size=\"small\"\n                            style={{ marginTop: 4 }}\n                        />\n                    </InputLabel>\n                    <Button \n                        id=\"btn\"\n                        variant=\"contained\" \n                        size=\"small\" \n                        style={{ marginTop: 30 }}\n                        fullWidth\n                        onClick={handleSubmit}\n                    >\n                        Create\n                    </Button>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default AddBoard; ","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Board.js",["81","82"],"import React, { useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { BoardContext } from \"../contexts/BoardContext\";\n\nfunction Board(props){\n    const { boards } = useContext(BoardContext);\n    let { boardid } = useParams();\n\n    const board = boards.filter(b => JSON.stringify(b.boardid) === boardid);\n\n    return (\n        <div>\n            {\n                board.map(board => (\n                    <h1>{board.title}</h1>\n                ))\n\n            }\n            {\n                !board.articles ? (\n                    <div />\n                ) : (\n                    board.articles.map(article => (\n                        <h1>{article.title}</h1>\n                    ))\n                )\n            }\n        </div>\n    );\n};\n\nexport default Board; ","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Articles.js",["83","84","85","86"],"import React, { useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport clsx from \"clsx\";\n\nimport { BoardContext } from \"../contexts/BoardContext\";\nimport { UserContext } from \"../contexts/UserContext\";\nimport { getModalStyle } from \"./theme\";\n\nimport { Typography, CardHeader, CardContent, Card, Modal, CardActionArea, Collapse, CardActions, IconButton, makeStyles, FormControl, Button, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport { ExpandMore, ExpandLess, Favorite } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      margin: \"0 4% 2%\",\n    },\n    container: {\n        width: \"100%\",\n        display: \"flex\",\n    },\n    left: {\n        width: \"55%\",\n        padding: \"2% 6% 2% 6%\",\n        textAlign: \"left\",\n    },\n    right: {\n        width: \"25%\",\n        padding: \"2% 6% 2% 0\",\n        height: 150,\n    },\n    expand: {\n        transform: \"rotate(0deg)\",\n        marginLeft: \"auto\",\n        transition: theme.transitions.create(\"transform\", {\n          duration: theme.transitions.duration.shortest,\n        }),\n      },\n    expandOpen: {\n        transform: \"rotate(180deg)\",\n    },\n    paper: {\n        position: \"absolute\",\n        width: 300,\n        paddingBottom: \"50px\",\n        borderRadius: \"6px\",\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n    button: {\n        display: \"block\",\n        marginTop: theme.spacing(2),\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n}));\n\nfunction Articles(props){\n    const { boards, articles, addArticles } = useContext(BoardContext);\n    const { userInfo } = useContext(UserContext);\n    const classes = useStyles();\n    const [selectedIndex, setSelectedIndex] = useState(\"\");\n\n    console.log(boards)\n    // modal\n    const [modalStyle] = useState(getModalStyle);\n    const [open, setOpen] = useState(false);\n    const [selectedArticle, setSelectedArticle] = useState({});\n\n    const handleExpandClick = (index) => {\n        if (selectedIndex === index) {\n            setSelectedIndex(\"\")\n          } else {\n            setSelectedIndex(index)\n          }\n    };\n\n    const handleOpen = (article) => {\n        setOpen(true);\n        setSelectedArticle(article);\n        console.log(selectedArticle)\n    };\n    \n    const handleClose = () => {\n        setOpen(false);\n        setSelectedArticle([]);\n    };\n\n    // dropdown\n    const [board, setBoard] = useState({});\n    const [openDropdown, setOpenDropdown] = useState(false);\n\n    const handleChange = (event) => {\n        setBoard(event.target.value);\n        console.log(event.target.value, selectedArticle)\n        addArticles(event.target.value.boardid, selectedArticle)\n        // resets\n        // setBoard({})\n        // setSelectedArticle([])\n        setOpen(false)\n        setOpenDropdown(false)\n    };\n\n    const handleDropdownOpen = () => {\n        setOpenDropdown(true);\n    };\n    \n    const handleDropdownClose = () => {\n        setOpenDropdown(false);\n    };\n\n    return (\n        <div>\n            <h1>Articles</h1>\n            <div className=\"list\">\n                {!articles ? (\n                    <div />\n                ) : (\n                    articles.map((article, index) => (\n                        <Card className={classes.root} key={article.title}>\n                            <CardActionArea \n                                key={article.title} \n                                href={article.url}\n                                target=\"_blank\"\n                            >\n                                <div className={classes.container}>\n                                    <CardHeader\n                                        className={classes.left}\n                                        title={article.title}\n                                        subheader={article.author}\n                                    />\n                                    <img className={classes.right} src={article.urlToImage} alt={article.title}/>\n                                </div>\n                            </CardActionArea>\n                            <CardActions style={{ paddingLeft:\"2%\", background:\"rgb(216, 216, 216, .5)\" }}>\n                                <IconButton onClick={() => handleOpen(article)}>\n                                    <Favorite />\n                                </IconButton>\n                                <Modal\n                                    open={open}\n                                    onClose={handleClose}\n                                >\n                                    <div style={modalStyle} className={classes.paper} setOpen={setOpen}>\n                                        <Card>\n                                            <Button className={classes.button} onClick={handleDropdownOpen}>\n                                                Open the select\n                                            </Button>\n                                            <FormControl className={classes.formControl}>\n                                                <InputLabel>Board</InputLabel>\n                                                <Select\n                                                    labelId=\"demo-controlled-open-select-label\"\n                                                    id=\"demo-controlled-open-select\"\n                                                    open={open}\n                                                    onClose={handleDropdownClose}\n                                                    onOpen={handleDropdownOpen}\n                                                    value={board}\n                                                    onChange={handleChange}\n                                                >\n                                                    <MenuItem value=\"\">\n                                                        <em>None</em>\n                                                    </MenuItem>\n                                                    {\n                                                        boards.map((board, i) => (\n                                                            <MenuItem key={board.boardid} value={board} onChange={handleChange}>{board.title}</MenuItem>\n                                                        ))\n                                                    }\n                                                </Select>\n                                            </FormControl>\n                                        </Card>\n                                    </div>\n                                </Modal>\n\n                                <IconButton onClick={() => handleExpandClick(index)}>\n                                    {index === selectedIndex ? <ExpandLess /> : <ExpandMore />}\n                                </IconButton>\n                            </CardActions>\n                            <Collapse in={index === selectedIndex} timeout=\"auto\" unmountOnExit>\n                                <CardContent style={{ textAlign:\"left\", padding:\"2% 6%\", background:\"rgb(216, 216, 216, .1)\" }}>\n                                    <Typography paragraph>Description:</Typography>\n                                    <Typography paragraph>{article.description}</Typography>\n                                </CardContent>\n                            </Collapse>\n                        </Card>\n                    ))\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Articles; ",{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":41,"column":6,"nodeType":"93","endLine":41,"endColumn":16,"suggestions":"94"},{"ruleId":"91","severity":1,"message":"95","line":67,"column":6,"nodeType":"93","endLine":67,"endColumn":17,"suggestions":"96"},{"ruleId":"97","severity":1,"message":"98","line":83,"column":25,"nodeType":"99","messageId":"100","endLine":83,"endColumn":41},{"ruleId":"91","severity":1,"message":"95","line":49,"column":8,"nodeType":"93","endLine":49,"endColumn":19,"suggestions":"101"},{"ruleId":"97","severity":1,"message":"102","line":8,"column":53,"nodeType":"99","messageId":"100","endLine":8,"endColumn":57},{"ruleId":"91","severity":1,"message":"95","line":50,"column":8,"nodeType":"93","endLine":50,"endColumn":19,"suggestions":"103"},{"ruleId":"97","severity":1,"message":"104","line":2,"column":10,"nodeType":"99","messageId":"100","endLine":2,"endColumn":14},{"ruleId":"97","severity":1,"message":"105","line":3,"column":8,"nodeType":"99","messageId":"100","endLine":3,"endColumn":12},{"ruleId":"97","severity":1,"message":"106","line":61,"column":13,"nodeType":"99","messageId":"100","endLine":61,"endColumn":21},{"ruleId":"97","severity":1,"message":"107","line":92,"column":12,"nodeType":"99","messageId":"100","endLine":92,"endColumn":24},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.","ArrayExpression",["110"],"React Hook useEffect has a missing dependency: 'fetchBoards'. Either include it or remove the dependency array.",["111"],"no-unused-vars","'setSavedArticles' is assigned a value but never used.","Identifier","unusedVar",["112"],"'Card' is defined but never used.",["113"],"'Link' is defined but never used.","'clsx' is defined but never used.","'userInfo' is assigned a value but never used.","'openDropdown' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"116","fix":"118"},{"desc":"116","fix":"119"},"Update the dependencies array to be: [history, loggedin, userInfo]",{"range":"120","text":"121"},"Update the dependencies array to be: [fetchBoards, isUpdated]",{"range":"122","text":"123"},{"range":"124","text":"123"},{"range":"125","text":"123"},[1287,1297],"[history, loggedin, userInfo]",[1877,1888],"[fetchBoards, isUpdated]",[1489,1500],[1530,1541]]