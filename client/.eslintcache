[{"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/index.js":"1","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/App.js":"2","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/reportWebVitals.js":"3","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Login.js":"4","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Profile.js":"5","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Dashboard.js":"6","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/SignUp.js":"7","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/utils/privateRoute.js":"8","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/utils/axiosWithAuth.js":"9","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/utils/PrivateRoute.js":"10","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/contexts/UserContext.js":"11","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/contexts/BoardContext.js":"12","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/yupSchemas.js":"13","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/theme.js":"14","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/AddBoard.js":"15","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Board.js":"16","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Articles.js":"17"},{"size":540,"mtime":1608774122006,"results":"18","hashOfConfig":"19"},{"size":4597,"mtime":1609205892830,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1608772902421,"results":"21","hashOfConfig":"19"},{"size":5215,"mtime":1609193044725,"results":"22","hashOfConfig":"19"},{"size":413,"mtime":1609101058146,"results":"23","hashOfConfig":"19"},{"size":2109,"mtime":1609206538658,"results":"24","hashOfConfig":"19"},{"size":6576,"mtime":1609193011366,"results":"25","hashOfConfig":"19"},{"size":450,"mtime":1608781574542,"results":"26","hashOfConfig":"19"},{"size":285,"mtime":1608773167069,"results":"27","hashOfConfig":"19"},{"size":450,"mtime":1608781574542,"results":"28","hashOfConfig":"19"},{"size":81,"mtime":1608930133323,"results":"29","hashOfConfig":"19"},{"size":84,"mtime":1608930151530,"results":"30","hashOfConfig":"19"},{"size":938,"mtime":1609191368703,"results":"31","hashOfConfig":"19"},{"size":1253,"mtime":1609203951292,"results":"32","hashOfConfig":"19"},{"size":3779,"mtime":1609206262749,"results":"33","hashOfConfig":"19"},{"size":793,"mtime":1609204501753,"results":"34","hashOfConfig":"19"},{"size":733,"mtime":1609206882147,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1cxeztd",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/index.js",[],["73","74"],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/App.js",["75","76"],"import React, { useState, useEffect } from \"react\";\nimport { Route, Switch, Link, useHistory } from \"react-router-dom\";\nimport { PrivateRoute } from \"./utils/PrivateRoute\";\nimport { axiosWithAuth } from \"./utils/axiosWithAuth\";\nimport { UserContext } from \"./contexts/UserContext\";\nimport { BoardContext } from \"./contexts/BoardContext\";\nimport axios from \"axios\";\n\nimport Login from \"./components/Login\";\nimport SignUp from \"./components/SignUp\";\nimport Dashboard from \"./components/Dashboard\";\nimport Profile from \"./components/Profile\";\nimport Board from \"./components/Board\";\nimport Articles from \"./components/Articles\";\nimport { useStyles } from \"./components/theme\";\n\nimport logo from \"./assets/logo.png\";\nimport { Button } from \"@material-ui/core\";\nimport \"./App.css\";\n\nfunction App() {\n  const [loggedin, setLoggedin] = useState(false);\n  const [userInfo, setUserInfo] = useState([]);\n  const history = useHistory();\n  const classes = useStyles();\n\n  // user info\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) {\n      axiosWithAuth()\n        .get(\"/users/myinfo\")\n        .then(res => {\n          setUserInfo(res.data);\n          console.log(userInfo)\n          history.push(\"/dashboard\")\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    }\n  }, [loggedin]);\n\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    setLoggedin(false);\n  };\n\n  // boards\n  const [boards, setBoards] = useState([]);\n  const [isUpdated, setIsUpdated] = useState(false)\n\n  const fetchBoards = () => {\n    if (localStorage.getItem(\"token\")) {\n      axiosWithAuth()\n          .get(\"/boards/boards\")\n          .then((res) => {\n            setBoards(res.data)\n            console.log(boards)\n            setIsUpdated(false)\n          })\n          .catch((err) => console.log(err.response));\n    }\n  };\n\n  useEffect(() => {\n      fetchBoards();\n  }, [isUpdated]);\n\n  // articles\n  const [articles, setArticles] = useState([]);\n\n  const getArticles = () => {\n    axios\n      .get(\"https://newsapi.org/v2/top-headlines?country=us&apiKey=0aff37691fc248aea950f3992e4004a0\")\n      .then(res => setArticles(res.data))\n      .catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    getArticles();\n  }, [articles]);\n\n  return (\n    <UserContext.Provider value={{ userInfo }}>\n      <BoardContext.Provider value = {{ boards, fetchBoards, isUpdated, setIsUpdated, articles }}>\n        <div className=\"App\">\n          <nav>\n            <div className=\"navbar-left\">\n              <img src={logo} alt=\"logo\" width=\"50px\" height=\"50px\" />\n              <h1 style={{ marginLeft:\"8px\" }}>Pintreach</h1>\n            </div>\n            {loggedin ? (\n              <div className=\"navbar-right\">\n                 <Button className={classes.btn3}>\n                  <Link to=\"/articles\" className=\"nav-link\">\n                    Articles\n                  </Link>\n                </Button>\n                <Button className={classes.btn3}>\n                  <Link to=\"/dashboard\" className=\"nav-link\">\n                    Dashboard\n                  </Link>\n                </Button>\n                <Button className={classes.btn3}>\n                  <Link to=\"/profile\" className=\"nav-link\">\n                    Profile\n                  </Link>\n                </Button>\n                <Button className={classes.btn3} onClick={logout}>\n                  <Link className=\"nav-link\">\n                    Logout\n                  </Link>\n                </Button>\n              </div>\n            ) : (\n              <div className=\"navbar-right\">\n                <Button className={classes.btn3}>\n                  <Link to=\"/login\" className=\"nav-link\">\n                    Login\n                  </Link>\n                </Button>\n                <Button className={classes.btn2}>\n                  <Link to=\"/signup\" className=\"nav-link\">\n                    Sign Up\n                  </Link>\n                </Button>\n              </div>\n            )}\n          </nav>\n\n          <Switch>\n            <Route exact path=\"/login\" render={props => <Login setLoggedin={setLoggedin} />}  />\n            <Route exact path=\"/signup\" component={SignUp} />\n            <PrivateRoute exact path=\"/dashboard\" component={Dashboard}/>\n            <PrivateRoute exact path=\"/profile\" component={Profile} />\n            <PrivateRoute exact path=\"/board/:boardid\" component={Board} />\n            <PrivateRoute exact path=\"/articles\" component={Articles} />\n          </Switch>\n        </div>\n      </BoardContext.Provider>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/reportWebVitals.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Login.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Profile.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Dashboard.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/SignUp.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/utils/privateRoute.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/utils/axiosWithAuth.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/utils/PrivateRoute.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/contexts/UserContext.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/contexts/BoardContext.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/yupSchemas.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/theme.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/AddBoard.js",["77"],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Board.js",["78","79"],"import React, { useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { BoardContext } from \"../contexts/BoardContext\";\n\nfunction Board(props){\n    const { boards } = useContext(BoardContext);\n    let { boardid } = useParams();\n\n    const board = boards.filter(b => JSON.stringify(b.boardid) === boardid);\n\n    return (\n        <div>\n            {\n                board.map(board => (\n                    <h1>{board.title}</h1>\n                ))\n\n            }\n            {\n                !board.articles ? (\n                    <div />\n                ) : (\n                    board.articles.map(article => (\n                        <h1>{article.title}</h1>\n                    ))\n                )\n            }\n        </div>\n    );\n};\n\nexport default Board; ","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Articles.js",["80","81"],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":41,"column":6,"nodeType":"88","endLine":41,"endColumn":16,"suggestions":"89"},{"ruleId":"86","severity":1,"message":"90","line":67,"column":6,"nodeType":"88","endLine":67,"endColumn":17,"suggestions":"91"},{"ruleId":"86","severity":1,"message":"90","line":50,"column":8,"nodeType":"88","endLine":50,"endColumn":19,"suggestions":"92"},{"ruleId":"93","severity":1,"message":"94","line":8,"column":53,"nodeType":"95","messageId":"96","endLine":8,"endColumn":57},{"ruleId":"86","severity":1,"message":"90","line":50,"column":8,"nodeType":"88","endLine":50,"endColumn":19,"suggestions":"97"},{"ruleId":"93","severity":1,"message":"98","line":4,"column":10,"nodeType":"95","messageId":"96","endLine":4,"endColumn":19},{"ruleId":"93","severity":1,"message":"99","line":6,"column":10,"nodeType":"95","messageId":"96","endLine":6,"endColumn":16},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.","ArrayExpression",["102"],"React Hook useEffect has a missing dependency: 'fetchBoards'. Either include it or remove the dependency array.",["103"],["104"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar",["105"],"'useStyles' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},{"desc":"108","fix":"110"},{"desc":"108","fix":"111"},"Update the dependencies array to be: [history, loggedin, userInfo]",{"range":"112","text":"113"},"Update the dependencies array to be: [fetchBoards, isUpdated]",{"range":"114","text":"115"},{"range":"116","text":"115"},{"range":"117","text":"115"},[1297,1307],"[history, loggedin, userInfo]",[1887,1898],"[fetchBoards, isUpdated]",[1527,1538],[1530,1541]]