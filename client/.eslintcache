[{"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/index.js":"1","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/App.js":"2","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/reportWebVitals.js":"3","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Login.js":"4","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Profile.js":"5","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Dashboard.js":"6","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/SignUp.js":"7","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/utils/privateRoute.js":"8","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/utils/axiosWithAuth.js":"9","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/utils/PrivateRoute.js":"10","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/contexts/UserContext.js":"11","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/contexts/BoardContext.js":"12","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/yupSchemas.js":"13","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/theme.js":"14","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/AddBoard.js":"15","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Board.js":"16","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Articles.js":"17"},{"size":540,"mtime":1608774122006,"results":"18","hashOfConfig":"19"},{"size":5023,"mtime":1609879096048,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1608772902421,"results":"21","hashOfConfig":"19"},{"size":5479,"mtime":1609357515882,"results":"22","hashOfConfig":"19"},{"size":973,"mtime":1609382427216,"results":"23","hashOfConfig":"19"},{"size":2229,"mtime":1609881214386,"results":"24","hashOfConfig":"19"},{"size":6561,"mtime":1609357565709,"results":"25","hashOfConfig":"19"},{"size":450,"mtime":1608781574542,"results":"26","hashOfConfig":"19"},{"size":285,"mtime":1608773167069,"results":"27","hashOfConfig":"19"},{"size":450,"mtime":1608781574542,"results":"28","hashOfConfig":"19"},{"size":81,"mtime":1608930133323,"results":"29","hashOfConfig":"19"},{"size":84,"mtime":1608930151530,"results":"30","hashOfConfig":"19"},{"size":938,"mtime":1609191368703,"results":"31","hashOfConfig":"19"},{"size":953,"mtime":1609266230658,"results":"32","hashOfConfig":"19"},{"size":3725,"mtime":1609454531818,"results":"33","hashOfConfig":"19"},{"size":1151,"mtime":1609881196500,"results":"34","hashOfConfig":"19"},{"size":7520,"mtime":1609879186181,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1cxeztd",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/index.js",[],["72","73"],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/App.js",["74"],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/reportWebVitals.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Login.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Profile.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Dashboard.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/SignUp.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/utils/privateRoute.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/utils/axiosWithAuth.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/utils/PrivateRoute.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/contexts/UserContext.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/contexts/BoardContext.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/yupSchemas.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/theme.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/AddBoard.js",["75"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\n\nimport { UserContext } from \"../contexts/UserContext\";\nimport { BoardContext } from \"../contexts/BoardContext\";\n\nimport { TextField, InputLabel, Button, CardHeader } from \"@material-ui/core\";\n\nfunction AddBoard(props) {\n    const { userInfo } = useContext(UserContext)\n    const { fetchBoards, isUpdated, setIsUpdated } = useContext(BoardContext)\n    const [newBoard, setNewBoard] = useState({\n        title: \"\",\n        description: \"\",\n        thumbnail: \"\",\n    })\n\n    const handleChange = event => {\n        setNewBoard({\n            ...newBoard, \n            [event.target.name]: event.target.value\n        })\n    }\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        axiosWithAuth()\n            .post(\"/boards/board\", {\n                boardid: userInfo.userid,\n                title: newBoard.title,\n                description: newBoard.description,\n                thumbnail: newBoard.thumbnail\n            })\n            .then((res) => {\n                fetchBoards();\n                setIsUpdated(true);\n                setNewBoard({        \n                    title: \"\",\n                    description: \"\",\n                    thumbnail: \"\",\n                });\n                props.setOpen(false);\n            })\n            .catch(err => console.log(err.message));\n    };\n\n    useEffect(() => {\n        fetchBoards();\n    }, [isUpdated])\n\n    return (\n        <div className=\"form\">\n            <div className=\"form-container1\">\n                <form>\n                    <CardHeader title=\"Create Board\" />\n                    <InputLabel id=\"form-field\" style={{ marginTop:\"2px\" }}>\n                        Name: \n                        <TextField\n                            id=\"title\"\n                            type=\"text\"\n                            name=\"title\"\n                            value={newBoard.title}\n                            onChange={handleChange}\n                            variant=\"outlined\"\n                            size=\"small\"\n                            style={{ marginTop: 4 }}\n                        />\n                    </InputLabel>\n                    <InputLabel id=\"form-field\">\n                        Description:\n                        <TextField\n                            type=\"text\"\n                            name=\"description\"\n                            value={newBoard.description}\n                            onChange={handleChange}\n                            variant=\"outlined\"\n                            size=\"small\"\n                            style={{ marginTop: 4 }}\n                        />\n                    </InputLabel>\n                    <InputLabel id=\"form-field\">\n                        Thumbnail:\n                        <TextField\n                            type=\"text\"\n                            name=\"thumbnail\"\n                            value={newBoard.thumbnail}\n                            onChange={handleChange}\n                            variant=\"outlined\"\n                            size=\"small\"\n                            style={{ marginTop: 4 }}\n                        />\n                    </InputLabel>\n                    <Button \n                        id=\"btn\"\n                        variant=\"contained\" \n                        size=\"small\" \n                        style={{ marginTop: 30 }}\n                        fullWidth\n                        onClick={handleSubmit}\n                    >\n                        Create\n                    </Button>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default AddBoard; ","/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Board.js",[],"/Users/adrienneemick/Desktop/Lambda/post-lamb/pintreach-context/client/src/components/Articles.js",["76","77","78","79","80"],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":39,"column":6,"nodeType":"87","endLine":39,"endColumn":16,"suggestions":"88"},{"ruleId":"85","severity":1,"message":"89","line":49,"column":8,"nodeType":"87","endLine":49,"endColumn":19,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":2,"column":10,"nodeType":"93","messageId":"94","endLine":2,"endColumn":14},{"ruleId":"91","severity":1,"message":"95","line":3,"column":8,"nodeType":"93","messageId":"94","endLine":3,"endColumn":12},{"ruleId":"91","severity":1,"message":"96","line":62,"column":11,"nodeType":"93","messageId":"94","endLine":62,"endColumn":17},{"ruleId":"91","severity":1,"message":"97","line":91,"column":19,"nodeType":"93","messageId":"94","endLine":91,"endColumn":27},{"ruleId":"91","severity":1,"message":"98","line":92,"column":12,"nodeType":"93","messageId":"94","endLine":92,"endColumn":24},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["101"],"React Hook useEffect has a missing dependency: 'fetchBoards'. Either include it or remove the dependency array.",["102"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'clsx' is defined but never used.","'userid' is assigned a value but never used.","'setBoard' is assigned a value but never used.","'openDropdown' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},"Update the dependencies array to be: [history, loggedin]",{"range":"107","text":"108"},"Update the dependencies array to be: [fetchBoards, isUpdated]",{"range":"109","text":"110"},[1231,1241],"[history, loggedin]",[1489,1500],"[fetchBoards, isUpdated]"]